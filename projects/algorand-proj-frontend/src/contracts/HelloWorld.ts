/* eslint-disable */
/**
 * This file was automatically generated by @algorandfoundation/algokit-client-generator.
 * DO NOT MODIFY IT BY HAND.
 * requires: @algorandfoundation/algokit-utils: ^7
 */
import { type AlgorandClient } from '@algorandfoundation/algokit-utils/types/algorand-client'
import { ABIReturn, AppReturn, SendAppTransactionResult } from '@algorandfoundation/algokit-utils/types/app'
import { Arc56Contract, getArc56ReturnValue, getABIStructFromABITuple } from '@algorandfoundation/algokit-utils/types/app-arc56'
import {
  AppClient as _AppClient,
  AppClientMethodCallParams,
  AppClientParams,
  AppClientBareCallParams,
  CallOnComplete,
  AppClientCompilationParams,
  ResolveAppClientByCreatorAndName,
  ResolveAppClientByNetwork,
  CloneAppClientParams,
} from '@algorandfoundation/algokit-utils/types/app-client'
import { AppFactory as _AppFactory, AppFactoryAppClientParams, AppFactoryResolveAppClientByCreatorAndNameParams, AppFactoryDeployParams, AppFactoryParams, CreateSchema } from '@algorandfoundation/algokit-utils/types/app-factory'
import { TransactionComposer, AppCallMethodCall, AppMethodCallTransactionArgument, SimulateOptions, RawSimulateOptions, SkipSignaturesSimulateOptions } from '@algorandfoundation/algokit-utils/types/composer'
import { SendParams, SendSingleTransactionResult, SendAtomicTransactionComposerResults } from '@algorandfoundation/algokit-utils/types/transaction'
import { Address, encodeAddress, modelsv2, OnApplicationComplete, Transaction, TransactionSigner } from 'algosdk'
import SimulateResponse = modelsv2.SimulateResponse

export const APP_SPEC: Arc56Contract = {"name":"HelloWorld","structs":{},"methods":[{"name":"hello","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello2","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello3","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello4","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello5","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello6","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello7","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello8","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello9","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello10","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello11","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello12","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello13","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello14","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello15","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello16","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello17","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello18","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello19","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello20","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello21","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello22","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello23","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello24","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello25","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello26","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello27","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello28","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello29","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello30","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello31","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello32","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello33","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello34","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello35","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello36","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello37","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello38","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello39","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello40","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello41","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello42","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello43","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello44","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello45","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello46","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello47","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello48","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello49","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}},{"name":"hello50","args":[{"type":"string","name":"name"}],"returns":{"type":"string"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"events":[],"recommendations":{}}],"arcs":[22,28],"networks":{},"state":{"schema":{"global":{"ints":0,"bytes":0},"local":{"ints":0,"bytes":0}},"keys":{"global":{},"local":{},"box":{}},"maps":{"global":{},"local":{},"box":{}}},"bareActions":{"create":["NoOp"],"call":["UpdateApplication"]},"sourceInfo":{"approval":{"sourceInfo":[{"pc":[2296],"errorMessage":"Check app is updatable"},{"pc":[367,397,427,457,487,517,547,577,607,637,667,697,727,757,787,817,847,877,907,937,967,997,1027,1057,1087,1117,1147,1177,1207,1237,1267,1297,1327,1357,1387,1417,1447,1477,1507,1537,1567,1597,1627,1657,1687,1717,1747,1777,1807,1837],"errorMessage":"OnCompletion is not NoOp"},{"pc":[1881],"errorMessage":"can only call when creating"},{"pc":[370,400,430,460,490,520,550,580,610,640,670,700,730,760,790,820,850,880,910,940,970,1000,1030,1060,1090,1120,1150,1180,1210,1240,1270,1300,1330,1360,1390,1420,1450,1480,1510,1540,1570,1600,1630,1660,1690,1720,1750,1780,1810,1840,1886],"errorMessage":"can only call when not creating"}],"pcOffsetMethod":"cblocks"},"clear":{"sourceInfo":[],"pcOffsetMethod":"none"}},"source":{"approval":"","clear":"I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"},"byteCode":{"approval":"CiADAQAAJgIEFR98dQdIZWxsbywgMRtBB0OCMgQCvs4RBG+XdcMEHGWWqQQLDMJ5BNjzGmYE0MxDhgQ/4b+6BKt7v0AE9mwWSQRC8auNBGas8ZgE7OwdWQT2CWlgBAnnkgMEA6Fr8QRUIB+IBBMn3qsE+PXEhQTDhCVTBO9fiXYEKAPhlwQoByqGBJpgaSkEpWUK5ASR2bKzBO6Hq/MEJ3kAcgR//NQUBLw0znIE7qlXqQQZZSJ3BEND4d8EKl+MSwQ96/m4BPCSVogEA+8XnwSwmQwOBMaGv8EEWILGlgRKTPnOBPh9k8ME8/XIwwSZQuaKBBU122wE9pRgjQTR84uFBJxUUqoED5jRrQQbYiQTBKnkvB02GgCOMgXABaIFhAVmBUgFKgUMBO4E0ASyBJQEdgRYBDoEHAP+A+ADwgOkA4YDaANKAywDDgLwAtICtAKWAngCWgI8Ah4CAAHiAcQBpgGIAWoBTAEuARAA8gDUALYAmAB6AFwAPgAgAAIjQzEZFEQxGEQ2GgFXAgCIB3BJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIB0pJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIByRJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIBv5JFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIBthJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIBrJJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIBoxJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIBmZJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIBkBJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIBhpJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIBfRJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIBc5JFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIBahJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIBYJJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIBVxJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIBTZJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIBRBJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIBOpJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIBMRJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIBJ5JFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIBHhJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIBFJJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIBCxJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIBAZJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIA+BJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIA7pJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIA5RJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIA25JFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIA0hJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIAyJJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIAvxJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIAtZJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIArBJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIAopJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIAmRJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIAj5JFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIAhhJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIAfJJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIAcxJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIAaZJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIAYBJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIAVpJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIATRJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIAQ5JFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIAOhJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIAMJJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIAJxJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIAHZJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIAFBJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIACpJFRZXBgJMUChMULAiQ4EEIzEZjgIACQADQvoUMRgURCJDMRhEiAGSIkOKAQEpi/9QiYoBASmL/1CJigEBKYv/UImKAQEpi/9QiYoBASmL/1CJigEBKYv/UImKAQEpi/9QiYoBASmL/1CJigEBKYv/UImKAQEpi/9QiYoBASmL/1CJigEBKYv/UImKAQEpi/9QiYoBASmL/1CJigEBKYv/UImKAQEpi/9QiYoBASmL/1CJigEBKYv/UImKAQEpi/9QiYoBASmL/1CJigEBKYv/UImKAQEpi/9QiYoBASmL/1CJigEBKYv/UImKAQEpi/9QiYoBASmL/1CJigEBKYv/UImKAQEpi/9QiYoBASmL/1CJigEBKYv/UImKAQEpi/9QiYoBASmL/1CJigEBKYv/UImKAQEpi/9QiYoBASmL/1CJigEBKYv/UImKAQEpi/9QiYoBASmL/1CJigEBKYv/UImKAQEpi/9QiYoBASmL/1CJigEBKYv/UImKAQEpi/9QiYoBASmL/1CJigEBKYv/UImKAQEpi/9QiYoBASmL/1CJigEBKYv/UImKAQEpi/9QiYoBASmL/1CJigAAJESJ","clear":"CoEBQw=="},"compilerInfo":{"compiler":"puya","compilerVersion":{"major":4,"minor":3,"patch":3}},"events":[],"templateVariables":{"UPDATABLE":{"type":"AVMUint64"}}} as unknown as Arc56Contract

/**
 * A state record containing binary data
 */
export interface BinaryState {
  /**
   * Gets the state value as a Uint8Array
   */
  asByteArray(): Uint8Array | undefined
  /**
   * Gets the state value as a string
   */
  asString(): string | undefined
}

class BinaryStateValue implements BinaryState {
  constructor(private value: Uint8Array | undefined) {}

  asByteArray(): Uint8Array | undefined {
    return this.value
  }

  asString(): string | undefined {
    return this.value !== undefined ? Buffer.from(this.value).toString('utf-8') : undefined
  }
}

/**
 * Expands types for IntelliSense so they are more human readable
 * See https://stackoverflow.com/a/69288824
 */
export type Expand<T> = T extends (...args: infer A) => infer R
  ? (...args: Expand<A>) => Expand<R>
  : T extends infer O
    ? { [K in keyof O]: O[K] }
    : never


/**
 * Deploy-time template variables
 */
export type TemplateVariables = {
  UPDATABLE: bigint,
}

/**
 * The argument types for the HelloWorld contract
 */
export type HelloWorldArgs = {
  /**
   * The object representation of the arguments for each method
   */
  obj: {
    'hello(string)string': {
      name: string
    }
    'hello2(string)string': {
      name: string
    }
    'hello3(string)string': {
      name: string
    }
    'hello4(string)string': {
      name: string
    }
    'hello5(string)string': {
      name: string
    }
    'hello6(string)string': {
      name: string
    }
    'hello7(string)string': {
      name: string
    }
    'hello8(string)string': {
      name: string
    }
    'hello9(string)string': {
      name: string
    }
    'hello10(string)string': {
      name: string
    }
    'hello11(string)string': {
      name: string
    }
    'hello12(string)string': {
      name: string
    }
    'hello13(string)string': {
      name: string
    }
    'hello14(string)string': {
      name: string
    }
    'hello15(string)string': {
      name: string
    }
    'hello16(string)string': {
      name: string
    }
    'hello17(string)string': {
      name: string
    }
    'hello18(string)string': {
      name: string
    }
    'hello19(string)string': {
      name: string
    }
    'hello20(string)string': {
      name: string
    }
    'hello21(string)string': {
      name: string
    }
    'hello22(string)string': {
      name: string
    }
    'hello23(string)string': {
      name: string
    }
    'hello24(string)string': {
      name: string
    }
    'hello25(string)string': {
      name: string
    }
    'hello26(string)string': {
      name: string
    }
    'hello27(string)string': {
      name: string
    }
    'hello28(string)string': {
      name: string
    }
    'hello29(string)string': {
      name: string
    }
    'hello30(string)string': {
      name: string
    }
    'hello31(string)string': {
      name: string
    }
    'hello32(string)string': {
      name: string
    }
    'hello33(string)string': {
      name: string
    }
    'hello34(string)string': {
      name: string
    }
    'hello35(string)string': {
      name: string
    }
    'hello36(string)string': {
      name: string
    }
    'hello37(string)string': {
      name: string
    }
    'hello38(string)string': {
      name: string
    }
    'hello39(string)string': {
      name: string
    }
    'hello40(string)string': {
      name: string
    }
    'hello41(string)string': {
      name: string
    }
    'hello42(string)string': {
      name: string
    }
    'hello43(string)string': {
      name: string
    }
    'hello44(string)string': {
      name: string
    }
    'hello45(string)string': {
      name: string
    }
    'hello46(string)string': {
      name: string
    }
    'hello47(string)string': {
      name: string
    }
    'hello48(string)string': {
      name: string
    }
    'hello49(string)string': {
      name: string
    }
    'hello50(string)string': {
      name: string
    }
  }
  /**
   * The tuple representation of the arguments for each method
   */
  tuple: {
    'hello(string)string': [name: string]
    'hello2(string)string': [name: string]
    'hello3(string)string': [name: string]
    'hello4(string)string': [name: string]
    'hello5(string)string': [name: string]
    'hello6(string)string': [name: string]
    'hello7(string)string': [name: string]
    'hello8(string)string': [name: string]
    'hello9(string)string': [name: string]
    'hello10(string)string': [name: string]
    'hello11(string)string': [name: string]
    'hello12(string)string': [name: string]
    'hello13(string)string': [name: string]
    'hello14(string)string': [name: string]
    'hello15(string)string': [name: string]
    'hello16(string)string': [name: string]
    'hello17(string)string': [name: string]
    'hello18(string)string': [name: string]
    'hello19(string)string': [name: string]
    'hello20(string)string': [name: string]
    'hello21(string)string': [name: string]
    'hello22(string)string': [name: string]
    'hello23(string)string': [name: string]
    'hello24(string)string': [name: string]
    'hello25(string)string': [name: string]
    'hello26(string)string': [name: string]
    'hello27(string)string': [name: string]
    'hello28(string)string': [name: string]
    'hello29(string)string': [name: string]
    'hello30(string)string': [name: string]
    'hello31(string)string': [name: string]
    'hello32(string)string': [name: string]
    'hello33(string)string': [name: string]
    'hello34(string)string': [name: string]
    'hello35(string)string': [name: string]
    'hello36(string)string': [name: string]
    'hello37(string)string': [name: string]
    'hello38(string)string': [name: string]
    'hello39(string)string': [name: string]
    'hello40(string)string': [name: string]
    'hello41(string)string': [name: string]
    'hello42(string)string': [name: string]
    'hello43(string)string': [name: string]
    'hello44(string)string': [name: string]
    'hello45(string)string': [name: string]
    'hello46(string)string': [name: string]
    'hello47(string)string': [name: string]
    'hello48(string)string': [name: string]
    'hello49(string)string': [name: string]
    'hello50(string)string': [name: string]
  }
}

/**
 * The return type for each method
 */
export type HelloWorldReturns = {
  'hello(string)string': string
  'hello2(string)string': string
  'hello3(string)string': string
  'hello4(string)string': string
  'hello5(string)string': string
  'hello6(string)string': string
  'hello7(string)string': string
  'hello8(string)string': string
  'hello9(string)string': string
  'hello10(string)string': string
  'hello11(string)string': string
  'hello12(string)string': string
  'hello13(string)string': string
  'hello14(string)string': string
  'hello15(string)string': string
  'hello16(string)string': string
  'hello17(string)string': string
  'hello18(string)string': string
  'hello19(string)string': string
  'hello20(string)string': string
  'hello21(string)string': string
  'hello22(string)string': string
  'hello23(string)string': string
  'hello24(string)string': string
  'hello25(string)string': string
  'hello26(string)string': string
  'hello27(string)string': string
  'hello28(string)string': string
  'hello29(string)string': string
  'hello30(string)string': string
  'hello31(string)string': string
  'hello32(string)string': string
  'hello33(string)string': string
  'hello34(string)string': string
  'hello35(string)string': string
  'hello36(string)string': string
  'hello37(string)string': string
  'hello38(string)string': string
  'hello39(string)string': string
  'hello40(string)string': string
  'hello41(string)string': string
  'hello42(string)string': string
  'hello43(string)string': string
  'hello44(string)string': string
  'hello45(string)string': string
  'hello46(string)string': string
  'hello47(string)string': string
  'hello48(string)string': string
  'hello49(string)string': string
  'hello50(string)string': string
}

/**
 * Defines the types of available calls and state of the HelloWorld smart contract.
 */
export type HelloWorldTypes = {
  /**
   * Maps method signatures / names to their argument and return types.
   */
  methods:
    & Record<'hello(string)string' | 'hello', {
      argsObj: HelloWorldArgs['obj']['hello(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello(string)string']
      returns: HelloWorldReturns['hello(string)string']
    }>
    & Record<'hello2(string)string' | 'hello2', {
      argsObj: HelloWorldArgs['obj']['hello2(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello2(string)string']
      returns: HelloWorldReturns['hello2(string)string']
    }>
    & Record<'hello3(string)string' | 'hello3', {
      argsObj: HelloWorldArgs['obj']['hello3(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello3(string)string']
      returns: HelloWorldReturns['hello3(string)string']
    }>
    & Record<'hello4(string)string' | 'hello4', {
      argsObj: HelloWorldArgs['obj']['hello4(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello4(string)string']
      returns: HelloWorldReturns['hello4(string)string']
    }>
    & Record<'hello5(string)string' | 'hello5', {
      argsObj: HelloWorldArgs['obj']['hello5(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello5(string)string']
      returns: HelloWorldReturns['hello5(string)string']
    }>
    & Record<'hello6(string)string' | 'hello6', {
      argsObj: HelloWorldArgs['obj']['hello6(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello6(string)string']
      returns: HelloWorldReturns['hello6(string)string']
    }>
    & Record<'hello7(string)string' | 'hello7', {
      argsObj: HelloWorldArgs['obj']['hello7(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello7(string)string']
      returns: HelloWorldReturns['hello7(string)string']
    }>
    & Record<'hello8(string)string' | 'hello8', {
      argsObj: HelloWorldArgs['obj']['hello8(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello8(string)string']
      returns: HelloWorldReturns['hello8(string)string']
    }>
    & Record<'hello9(string)string' | 'hello9', {
      argsObj: HelloWorldArgs['obj']['hello9(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello9(string)string']
      returns: HelloWorldReturns['hello9(string)string']
    }>
    & Record<'hello10(string)string' | 'hello10', {
      argsObj: HelloWorldArgs['obj']['hello10(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello10(string)string']
      returns: HelloWorldReturns['hello10(string)string']
    }>
    & Record<'hello11(string)string' | 'hello11', {
      argsObj: HelloWorldArgs['obj']['hello11(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello11(string)string']
      returns: HelloWorldReturns['hello11(string)string']
    }>
    & Record<'hello12(string)string' | 'hello12', {
      argsObj: HelloWorldArgs['obj']['hello12(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello12(string)string']
      returns: HelloWorldReturns['hello12(string)string']
    }>
    & Record<'hello13(string)string' | 'hello13', {
      argsObj: HelloWorldArgs['obj']['hello13(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello13(string)string']
      returns: HelloWorldReturns['hello13(string)string']
    }>
    & Record<'hello14(string)string' | 'hello14', {
      argsObj: HelloWorldArgs['obj']['hello14(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello14(string)string']
      returns: HelloWorldReturns['hello14(string)string']
    }>
    & Record<'hello15(string)string' | 'hello15', {
      argsObj: HelloWorldArgs['obj']['hello15(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello15(string)string']
      returns: HelloWorldReturns['hello15(string)string']
    }>
    & Record<'hello16(string)string' | 'hello16', {
      argsObj: HelloWorldArgs['obj']['hello16(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello16(string)string']
      returns: HelloWorldReturns['hello16(string)string']
    }>
    & Record<'hello17(string)string' | 'hello17', {
      argsObj: HelloWorldArgs['obj']['hello17(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello17(string)string']
      returns: HelloWorldReturns['hello17(string)string']
    }>
    & Record<'hello18(string)string' | 'hello18', {
      argsObj: HelloWorldArgs['obj']['hello18(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello18(string)string']
      returns: HelloWorldReturns['hello18(string)string']
    }>
    & Record<'hello19(string)string' | 'hello19', {
      argsObj: HelloWorldArgs['obj']['hello19(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello19(string)string']
      returns: HelloWorldReturns['hello19(string)string']
    }>
    & Record<'hello20(string)string' | 'hello20', {
      argsObj: HelloWorldArgs['obj']['hello20(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello20(string)string']
      returns: HelloWorldReturns['hello20(string)string']
    }>
    & Record<'hello21(string)string' | 'hello21', {
      argsObj: HelloWorldArgs['obj']['hello21(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello21(string)string']
      returns: HelloWorldReturns['hello21(string)string']
    }>
    & Record<'hello22(string)string' | 'hello22', {
      argsObj: HelloWorldArgs['obj']['hello22(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello22(string)string']
      returns: HelloWorldReturns['hello22(string)string']
    }>
    & Record<'hello23(string)string' | 'hello23', {
      argsObj: HelloWorldArgs['obj']['hello23(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello23(string)string']
      returns: HelloWorldReturns['hello23(string)string']
    }>
    & Record<'hello24(string)string' | 'hello24', {
      argsObj: HelloWorldArgs['obj']['hello24(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello24(string)string']
      returns: HelloWorldReturns['hello24(string)string']
    }>
    & Record<'hello25(string)string' | 'hello25', {
      argsObj: HelloWorldArgs['obj']['hello25(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello25(string)string']
      returns: HelloWorldReturns['hello25(string)string']
    }>
    & Record<'hello26(string)string' | 'hello26', {
      argsObj: HelloWorldArgs['obj']['hello26(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello26(string)string']
      returns: HelloWorldReturns['hello26(string)string']
    }>
    & Record<'hello27(string)string' | 'hello27', {
      argsObj: HelloWorldArgs['obj']['hello27(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello27(string)string']
      returns: HelloWorldReturns['hello27(string)string']
    }>
    & Record<'hello28(string)string' | 'hello28', {
      argsObj: HelloWorldArgs['obj']['hello28(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello28(string)string']
      returns: HelloWorldReturns['hello28(string)string']
    }>
    & Record<'hello29(string)string' | 'hello29', {
      argsObj: HelloWorldArgs['obj']['hello29(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello29(string)string']
      returns: HelloWorldReturns['hello29(string)string']
    }>
    & Record<'hello30(string)string' | 'hello30', {
      argsObj: HelloWorldArgs['obj']['hello30(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello30(string)string']
      returns: HelloWorldReturns['hello30(string)string']
    }>
    & Record<'hello31(string)string' | 'hello31', {
      argsObj: HelloWorldArgs['obj']['hello31(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello31(string)string']
      returns: HelloWorldReturns['hello31(string)string']
    }>
    & Record<'hello32(string)string' | 'hello32', {
      argsObj: HelloWorldArgs['obj']['hello32(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello32(string)string']
      returns: HelloWorldReturns['hello32(string)string']
    }>
    & Record<'hello33(string)string' | 'hello33', {
      argsObj: HelloWorldArgs['obj']['hello33(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello33(string)string']
      returns: HelloWorldReturns['hello33(string)string']
    }>
    & Record<'hello34(string)string' | 'hello34', {
      argsObj: HelloWorldArgs['obj']['hello34(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello34(string)string']
      returns: HelloWorldReturns['hello34(string)string']
    }>
    & Record<'hello35(string)string' | 'hello35', {
      argsObj: HelloWorldArgs['obj']['hello35(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello35(string)string']
      returns: HelloWorldReturns['hello35(string)string']
    }>
    & Record<'hello36(string)string' | 'hello36', {
      argsObj: HelloWorldArgs['obj']['hello36(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello36(string)string']
      returns: HelloWorldReturns['hello36(string)string']
    }>
    & Record<'hello37(string)string' | 'hello37', {
      argsObj: HelloWorldArgs['obj']['hello37(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello37(string)string']
      returns: HelloWorldReturns['hello37(string)string']
    }>
    & Record<'hello38(string)string' | 'hello38', {
      argsObj: HelloWorldArgs['obj']['hello38(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello38(string)string']
      returns: HelloWorldReturns['hello38(string)string']
    }>
    & Record<'hello39(string)string' | 'hello39', {
      argsObj: HelloWorldArgs['obj']['hello39(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello39(string)string']
      returns: HelloWorldReturns['hello39(string)string']
    }>
    & Record<'hello40(string)string' | 'hello40', {
      argsObj: HelloWorldArgs['obj']['hello40(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello40(string)string']
      returns: HelloWorldReturns['hello40(string)string']
    }>
    & Record<'hello41(string)string' | 'hello41', {
      argsObj: HelloWorldArgs['obj']['hello41(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello41(string)string']
      returns: HelloWorldReturns['hello41(string)string']
    }>
    & Record<'hello42(string)string' | 'hello42', {
      argsObj: HelloWorldArgs['obj']['hello42(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello42(string)string']
      returns: HelloWorldReturns['hello42(string)string']
    }>
    & Record<'hello43(string)string' | 'hello43', {
      argsObj: HelloWorldArgs['obj']['hello43(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello43(string)string']
      returns: HelloWorldReturns['hello43(string)string']
    }>
    & Record<'hello44(string)string' | 'hello44', {
      argsObj: HelloWorldArgs['obj']['hello44(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello44(string)string']
      returns: HelloWorldReturns['hello44(string)string']
    }>
    & Record<'hello45(string)string' | 'hello45', {
      argsObj: HelloWorldArgs['obj']['hello45(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello45(string)string']
      returns: HelloWorldReturns['hello45(string)string']
    }>
    & Record<'hello46(string)string' | 'hello46', {
      argsObj: HelloWorldArgs['obj']['hello46(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello46(string)string']
      returns: HelloWorldReturns['hello46(string)string']
    }>
    & Record<'hello47(string)string' | 'hello47', {
      argsObj: HelloWorldArgs['obj']['hello47(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello47(string)string']
      returns: HelloWorldReturns['hello47(string)string']
    }>
    & Record<'hello48(string)string' | 'hello48', {
      argsObj: HelloWorldArgs['obj']['hello48(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello48(string)string']
      returns: HelloWorldReturns['hello48(string)string']
    }>
    & Record<'hello49(string)string' | 'hello49', {
      argsObj: HelloWorldArgs['obj']['hello49(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello49(string)string']
      returns: HelloWorldReturns['hello49(string)string']
    }>
    & Record<'hello50(string)string' | 'hello50', {
      argsObj: HelloWorldArgs['obj']['hello50(string)string']
      argsTuple: HelloWorldArgs['tuple']['hello50(string)string']
      returns: HelloWorldReturns['hello50(string)string']
    }>
}

/**
 * Defines the possible abi call signatures.
 */
export type HelloWorldSignatures = keyof HelloWorldTypes['methods']
/**
 * Defines the possible abi call signatures for methods that return a non-void value.
 */
export type HelloWorldNonVoidMethodSignatures = keyof HelloWorldTypes['methods'] extends infer T ? T extends keyof HelloWorldTypes['methods'] ? MethodReturn<T> extends void ? never : T  : never : never
/**
 * Defines an object containing all relevant parameters for a single call to the contract.
 */
export type CallParams<TArgs> = Expand<
  Omit<AppClientMethodCallParams, 'method' | 'args' | 'onComplete'> &
    {
      /** The args for the ABI method call, either as an ordered array or an object */
      args: Expand<TArgs>
    }
>
/**
 * Maps a method signature from the HelloWorld smart contract to the method's arguments in either tuple or struct form
 */
export type MethodArgs<TSignature extends HelloWorldSignatures> = HelloWorldTypes['methods'][TSignature]['argsObj' | 'argsTuple']
/**
 * Maps a method signature from the HelloWorld smart contract to the method's return type
 */
export type MethodReturn<TSignature extends HelloWorldSignatures> = HelloWorldTypes['methods'][TSignature]['returns']


/**
 * Defines supported create method params for this smart contract
 */
export type HelloWorldCreateCallParams =
  | Expand<AppClientBareCallParams & {method?: never} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
/**
 * Defines supported update method params for this smart contract
 */
export type HelloWorldUpdateCallParams =
  | Expand<AppClientBareCallParams> & {method?: never}
/**
 * Defines arguments required for the deploy method.
 */
export type HelloWorldDeployParams = Expand<Omit<AppFactoryDeployParams, 'createParams' | 'updateParams' | 'deleteParams'> & {
  /**
   * Create transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  createParams?: HelloWorldCreateCallParams
  /**
   * Update transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  updateParams?: HelloWorldUpdateCallParams
}>


/**
 * Exposes methods for constructing `AppClient` params objects for ABI calls to the HelloWorld smart contract
 */
export abstract class HelloWorldParamsFactory {
  /**
   * Constructs a no op call for the hello(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello(params: CallParams<HelloWorldArgs['obj']['hello(string)string'] | HelloWorldArgs['tuple']['hello(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello2(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello2(params: CallParams<HelloWorldArgs['obj']['hello2(string)string'] | HelloWorldArgs['tuple']['hello2(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello2(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello3(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello3(params: CallParams<HelloWorldArgs['obj']['hello3(string)string'] | HelloWorldArgs['tuple']['hello3(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello3(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello4(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello4(params: CallParams<HelloWorldArgs['obj']['hello4(string)string'] | HelloWorldArgs['tuple']['hello4(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello4(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello5(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello5(params: CallParams<HelloWorldArgs['obj']['hello5(string)string'] | HelloWorldArgs['tuple']['hello5(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello5(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello6(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello6(params: CallParams<HelloWorldArgs['obj']['hello6(string)string'] | HelloWorldArgs['tuple']['hello6(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello6(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello7(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello7(params: CallParams<HelloWorldArgs['obj']['hello7(string)string'] | HelloWorldArgs['tuple']['hello7(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello7(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello8(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello8(params: CallParams<HelloWorldArgs['obj']['hello8(string)string'] | HelloWorldArgs['tuple']['hello8(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello8(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello9(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello9(params: CallParams<HelloWorldArgs['obj']['hello9(string)string'] | HelloWorldArgs['tuple']['hello9(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello9(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello10(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello10(params: CallParams<HelloWorldArgs['obj']['hello10(string)string'] | HelloWorldArgs['tuple']['hello10(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello10(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello11(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello11(params: CallParams<HelloWorldArgs['obj']['hello11(string)string'] | HelloWorldArgs['tuple']['hello11(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello11(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello12(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello12(params: CallParams<HelloWorldArgs['obj']['hello12(string)string'] | HelloWorldArgs['tuple']['hello12(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello12(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello13(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello13(params: CallParams<HelloWorldArgs['obj']['hello13(string)string'] | HelloWorldArgs['tuple']['hello13(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello13(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello14(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello14(params: CallParams<HelloWorldArgs['obj']['hello14(string)string'] | HelloWorldArgs['tuple']['hello14(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello14(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello15(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello15(params: CallParams<HelloWorldArgs['obj']['hello15(string)string'] | HelloWorldArgs['tuple']['hello15(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello15(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello16(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello16(params: CallParams<HelloWorldArgs['obj']['hello16(string)string'] | HelloWorldArgs['tuple']['hello16(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello16(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello17(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello17(params: CallParams<HelloWorldArgs['obj']['hello17(string)string'] | HelloWorldArgs['tuple']['hello17(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello17(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello18(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello18(params: CallParams<HelloWorldArgs['obj']['hello18(string)string'] | HelloWorldArgs['tuple']['hello18(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello18(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello19(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello19(params: CallParams<HelloWorldArgs['obj']['hello19(string)string'] | HelloWorldArgs['tuple']['hello19(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello19(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello20(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello20(params: CallParams<HelloWorldArgs['obj']['hello20(string)string'] | HelloWorldArgs['tuple']['hello20(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello20(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello21(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello21(params: CallParams<HelloWorldArgs['obj']['hello21(string)string'] | HelloWorldArgs['tuple']['hello21(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello21(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello22(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello22(params: CallParams<HelloWorldArgs['obj']['hello22(string)string'] | HelloWorldArgs['tuple']['hello22(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello22(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello23(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello23(params: CallParams<HelloWorldArgs['obj']['hello23(string)string'] | HelloWorldArgs['tuple']['hello23(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello23(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello24(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello24(params: CallParams<HelloWorldArgs['obj']['hello24(string)string'] | HelloWorldArgs['tuple']['hello24(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello24(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello25(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello25(params: CallParams<HelloWorldArgs['obj']['hello25(string)string'] | HelloWorldArgs['tuple']['hello25(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello25(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello26(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello26(params: CallParams<HelloWorldArgs['obj']['hello26(string)string'] | HelloWorldArgs['tuple']['hello26(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello26(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello27(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello27(params: CallParams<HelloWorldArgs['obj']['hello27(string)string'] | HelloWorldArgs['tuple']['hello27(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello27(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello28(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello28(params: CallParams<HelloWorldArgs['obj']['hello28(string)string'] | HelloWorldArgs['tuple']['hello28(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello28(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello29(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello29(params: CallParams<HelloWorldArgs['obj']['hello29(string)string'] | HelloWorldArgs['tuple']['hello29(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello29(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello30(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello30(params: CallParams<HelloWorldArgs['obj']['hello30(string)string'] | HelloWorldArgs['tuple']['hello30(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello30(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello31(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello31(params: CallParams<HelloWorldArgs['obj']['hello31(string)string'] | HelloWorldArgs['tuple']['hello31(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello31(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello32(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello32(params: CallParams<HelloWorldArgs['obj']['hello32(string)string'] | HelloWorldArgs['tuple']['hello32(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello32(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello33(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello33(params: CallParams<HelloWorldArgs['obj']['hello33(string)string'] | HelloWorldArgs['tuple']['hello33(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello33(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello34(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello34(params: CallParams<HelloWorldArgs['obj']['hello34(string)string'] | HelloWorldArgs['tuple']['hello34(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello34(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello35(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello35(params: CallParams<HelloWorldArgs['obj']['hello35(string)string'] | HelloWorldArgs['tuple']['hello35(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello35(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello36(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello36(params: CallParams<HelloWorldArgs['obj']['hello36(string)string'] | HelloWorldArgs['tuple']['hello36(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello36(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello37(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello37(params: CallParams<HelloWorldArgs['obj']['hello37(string)string'] | HelloWorldArgs['tuple']['hello37(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello37(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello38(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello38(params: CallParams<HelloWorldArgs['obj']['hello38(string)string'] | HelloWorldArgs['tuple']['hello38(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello38(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello39(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello39(params: CallParams<HelloWorldArgs['obj']['hello39(string)string'] | HelloWorldArgs['tuple']['hello39(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello39(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello40(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello40(params: CallParams<HelloWorldArgs['obj']['hello40(string)string'] | HelloWorldArgs['tuple']['hello40(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello40(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello41(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello41(params: CallParams<HelloWorldArgs['obj']['hello41(string)string'] | HelloWorldArgs['tuple']['hello41(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello41(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello42(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello42(params: CallParams<HelloWorldArgs['obj']['hello42(string)string'] | HelloWorldArgs['tuple']['hello42(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello42(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello43(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello43(params: CallParams<HelloWorldArgs['obj']['hello43(string)string'] | HelloWorldArgs['tuple']['hello43(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello43(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello44(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello44(params: CallParams<HelloWorldArgs['obj']['hello44(string)string'] | HelloWorldArgs['tuple']['hello44(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello44(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello45(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello45(params: CallParams<HelloWorldArgs['obj']['hello45(string)string'] | HelloWorldArgs['tuple']['hello45(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello45(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello46(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello46(params: CallParams<HelloWorldArgs['obj']['hello46(string)string'] | HelloWorldArgs['tuple']['hello46(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello46(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello47(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello47(params: CallParams<HelloWorldArgs['obj']['hello47(string)string'] | HelloWorldArgs['tuple']['hello47(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello47(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello48(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello48(params: CallParams<HelloWorldArgs['obj']['hello48(string)string'] | HelloWorldArgs['tuple']['hello48(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello48(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello49(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello49(params: CallParams<HelloWorldArgs['obj']['hello49(string)string'] | HelloWorldArgs['tuple']['hello49(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello49(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
  /**
   * Constructs a no op call for the hello50(string)string ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hello50(params: CallParams<HelloWorldArgs['obj']['hello50(string)string'] | HelloWorldArgs['tuple']['hello50(string)string']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hello50(string)string' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.name],
    }
  }
}

/**
 * A factory to create and deploy one or more instance of the HelloWorld smart contract and to create one or more app clients to interact with those (or other) app instances
 */
export class HelloWorldFactory {
  /**
   * The underlying `AppFactory` for when you want to have more flexibility
   */
  public readonly appFactory: _AppFactory

  /**
   * Creates a new instance of `HelloWorldFactory`
   *
   * @param params The parameters to initialise the app factory with
   */
  constructor(params: Omit<AppFactoryParams, 'appSpec'>) {
    this.appFactory = new _AppFactory({
      ...params,
      appSpec: APP_SPEC,
    })
  }
  
  /** The name of the app (from the ARC-32 / ARC-56 app spec or override). */
  public get appName() {
    return this.appFactory.appName
  }
  
  /** The ARC-56 app spec being used */
  get appSpec() {
    return APP_SPEC
  }
  
  /** A reference to the underlying `AlgorandClient` this app factory is using. */
  public get algorand(): AlgorandClient {
    return this.appFactory.algorand
  }
  
  /**
   * Returns a new `AppClient` client for an app instance of the given ID.
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public getAppClientById(params: AppFactoryAppClientParams) {
    return new HelloWorldClient(this.appFactory.getAppClientById(params))
  }
  
  /**
   * Returns a new `AppClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public async getAppClientByCreatorAndName(
    params: AppFactoryResolveAppClientByCreatorAndNameParams,
  ) {
    return new HelloWorldClient(await this.appFactory.getAppClientByCreatorAndName(params))
  }

  /**
   * Idempotently deploys the HelloWorld smart contract.
   *
   * @param params The arguments for the contract calls and any additional parameters for the call
   * @returns The deployment result
   */
  public async deploy(params: HelloWorldDeployParams = {}) {
    const result = await this.appFactory.deploy({
      ...params,
    })
    return { result: result.result, appClient: new HelloWorldClient(result.appClient) }
  }

  /**
   * Get parameters to create transactions (create and deploy related calls) for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the HelloWorld smart contract using a bare call.
       *
       * @param params The params for the bare (raw) call
       * @returns The params for a create call
       */
      bare: (params?: Expand<AppClientBareCallParams & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC}>) => {
        return this.appFactory.params.bare.create(params)
      },
    },

    /**
     * Gets available deployUpdate methods
     */
    deployUpdate: {
      /**
       * Updates an existing instance of the HelloWorld smart contract using a bare call.
       *
       * @param params The params for the bare (raw) call
       * @returns The params for a deployUpdate call
       */
      bare: (params?: Expand<AppClientBareCallParams & AppClientCompilationParams>) => {
        return this.appFactory.params.bare.deployUpdate(params)
      },
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the HelloWorld smart contract using a bare call.
       *
       * @param params The params for the bare (raw) call
       * @returns The transaction for a create call
       */
      bare: (params?: Expand<AppClientBareCallParams & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC}>) => {
        return this.appFactory.createTransaction.bare.create(params)
      },
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the HelloWorld smart contract using a bare call.
       *
       * @param params The params for the bare (raw) call
       * @returns The create result
       */
      bare: async (params?: Expand<AppClientBareCallParams & AppClientCompilationParams & CreateSchema & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}>) => {
        const result = await this.appFactory.send.bare.create(params)
        return { result: result.result, appClient: new HelloWorldClient(result.appClient) }
      },
    },

  }

}
/**
 * A client to make calls to the HelloWorld smart contract
 */
export class HelloWorldClient {
  /**
   * The underlying `AppClient` for when you want to have more flexibility
   */
  public readonly appClient: _AppClient

  /**
   * Creates a new instance of `HelloWorldClient`
   *
   * @param appClient An `AppClient` instance which has been created with the HelloWorld app spec
   */
  constructor(appClient: _AppClient)
  /**
   * Creates a new instance of `HelloWorldClient`
   *
   * @param params The parameters to initialise the app client with
   */
  constructor(params: Omit<AppClientParams, 'appSpec'>)
  constructor(appClientOrParams: _AppClient | Omit<AppClientParams, 'appSpec'>) {
    this.appClient = appClientOrParams instanceof _AppClient ? appClientOrParams : new _AppClient({
      ...appClientOrParams,
      appSpec: APP_SPEC,
    })
  }
  
  /**
   * Checks for decode errors on the given return value and maps the return value to the return type for the given method
   * @returns The typed return value or undefined if there was no value
   */
  decodeReturnValue<TSignature extends HelloWorldNonVoidMethodSignatures>(method: TSignature, returnValue: ABIReturn | undefined) {
    return returnValue !== undefined ? getArc56ReturnValue<MethodReturn<TSignature>>(returnValue, this.appClient.getABIMethod(method), APP_SPEC.structs) : undefined
  }
  
  /**
   * Returns a new `HelloWorldClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   * @param params The parameters to create the app client
   */
  public static async fromCreatorAndName(params: Omit<ResolveAppClientByCreatorAndName, 'appSpec'>): Promise<HelloWorldClient> {
    return new HelloWorldClient(await _AppClient.fromCreatorAndName({...params, appSpec: APP_SPEC}))
  }
  
  /**
   * Returns an `HelloWorldClient` instance for the current network based on
   * pre-determined network-specific app IDs specified in the ARC-56 app spec.
   *
   * If no IDs are in the app spec or the network isn't recognised, an error is thrown.
   * @param params The parameters to create the app client
   */
  static async fromNetwork(
    params: Omit<ResolveAppClientByNetwork, 'appSpec'>
  ): Promise<HelloWorldClient> {
    return new HelloWorldClient(await _AppClient.fromNetwork({...params, appSpec: APP_SPEC}))
  }
  
  /** The ID of the app instance this client is linked to. */
  public get appId() {
    return this.appClient.appId
  }
  
  /** The app address of the app instance this client is linked to. */
  public get appAddress() {
    return this.appClient.appAddress
  }
  
  /** The name of the app. */
  public get appName() {
    return this.appClient.appName
  }
  
  /** The ARC-56 app spec being used */
  public get appSpec() {
    return this.appClient.appSpec
  }
  
  /** A reference to the underlying `AlgorandClient` this app client is using. */
  public get algorand(): AlgorandClient {
    return this.appClient.algorand
  }

  /**
   * Get parameters to create transactions for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available update methods
     */
    update: {
      /**
       * Updates an existing instance of the HelloWorld smart contract using a bare call.
       *
       * @param params The params for the bare (raw) call
       * @returns The update result
       */
      bare: (params?: Expand<AppClientBareCallParams & AppClientCompilationParams>) => {
        return this.appClient.params.bare.update(params)
      },
    },

    /**
     * Makes a clear_state call to an existing instance of the HelloWorld smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.params.bare.clearState(params)
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello: (params: CallParams<HelloWorldArgs['obj']['hello(string)string'] | HelloWorldArgs['tuple']['hello(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello2(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello2: (params: CallParams<HelloWorldArgs['obj']['hello2(string)string'] | HelloWorldArgs['tuple']['hello2(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello2(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello3(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello3: (params: CallParams<HelloWorldArgs['obj']['hello3(string)string'] | HelloWorldArgs['tuple']['hello3(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello3(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello4(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello4: (params: CallParams<HelloWorldArgs['obj']['hello4(string)string'] | HelloWorldArgs['tuple']['hello4(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello4(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello5(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello5: (params: CallParams<HelloWorldArgs['obj']['hello5(string)string'] | HelloWorldArgs['tuple']['hello5(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello5(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello6(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello6: (params: CallParams<HelloWorldArgs['obj']['hello6(string)string'] | HelloWorldArgs['tuple']['hello6(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello6(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello7(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello7: (params: CallParams<HelloWorldArgs['obj']['hello7(string)string'] | HelloWorldArgs['tuple']['hello7(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello7(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello8(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello8: (params: CallParams<HelloWorldArgs['obj']['hello8(string)string'] | HelloWorldArgs['tuple']['hello8(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello8(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello9(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello9: (params: CallParams<HelloWorldArgs['obj']['hello9(string)string'] | HelloWorldArgs['tuple']['hello9(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello9(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello10(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello10: (params: CallParams<HelloWorldArgs['obj']['hello10(string)string'] | HelloWorldArgs['tuple']['hello10(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello10(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello11(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello11: (params: CallParams<HelloWorldArgs['obj']['hello11(string)string'] | HelloWorldArgs['tuple']['hello11(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello11(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello12(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello12: (params: CallParams<HelloWorldArgs['obj']['hello12(string)string'] | HelloWorldArgs['tuple']['hello12(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello12(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello13(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello13: (params: CallParams<HelloWorldArgs['obj']['hello13(string)string'] | HelloWorldArgs['tuple']['hello13(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello13(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello14(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello14: (params: CallParams<HelloWorldArgs['obj']['hello14(string)string'] | HelloWorldArgs['tuple']['hello14(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello14(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello15(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello15: (params: CallParams<HelloWorldArgs['obj']['hello15(string)string'] | HelloWorldArgs['tuple']['hello15(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello15(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello16(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello16: (params: CallParams<HelloWorldArgs['obj']['hello16(string)string'] | HelloWorldArgs['tuple']['hello16(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello16(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello17(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello17: (params: CallParams<HelloWorldArgs['obj']['hello17(string)string'] | HelloWorldArgs['tuple']['hello17(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello17(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello18(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello18: (params: CallParams<HelloWorldArgs['obj']['hello18(string)string'] | HelloWorldArgs['tuple']['hello18(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello18(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello19(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello19: (params: CallParams<HelloWorldArgs['obj']['hello19(string)string'] | HelloWorldArgs['tuple']['hello19(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello19(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello20(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello20: (params: CallParams<HelloWorldArgs['obj']['hello20(string)string'] | HelloWorldArgs['tuple']['hello20(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello20(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello21(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello21: (params: CallParams<HelloWorldArgs['obj']['hello21(string)string'] | HelloWorldArgs['tuple']['hello21(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello21(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello22(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello22: (params: CallParams<HelloWorldArgs['obj']['hello22(string)string'] | HelloWorldArgs['tuple']['hello22(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello22(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello23(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello23: (params: CallParams<HelloWorldArgs['obj']['hello23(string)string'] | HelloWorldArgs['tuple']['hello23(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello23(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello24(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello24: (params: CallParams<HelloWorldArgs['obj']['hello24(string)string'] | HelloWorldArgs['tuple']['hello24(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello24(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello25(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello25: (params: CallParams<HelloWorldArgs['obj']['hello25(string)string'] | HelloWorldArgs['tuple']['hello25(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello25(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello26(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello26: (params: CallParams<HelloWorldArgs['obj']['hello26(string)string'] | HelloWorldArgs['tuple']['hello26(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello26(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello27(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello27: (params: CallParams<HelloWorldArgs['obj']['hello27(string)string'] | HelloWorldArgs['tuple']['hello27(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello27(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello28(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello28: (params: CallParams<HelloWorldArgs['obj']['hello28(string)string'] | HelloWorldArgs['tuple']['hello28(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello28(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello29(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello29: (params: CallParams<HelloWorldArgs['obj']['hello29(string)string'] | HelloWorldArgs['tuple']['hello29(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello29(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello30(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello30: (params: CallParams<HelloWorldArgs['obj']['hello30(string)string'] | HelloWorldArgs['tuple']['hello30(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello30(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello31(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello31: (params: CallParams<HelloWorldArgs['obj']['hello31(string)string'] | HelloWorldArgs['tuple']['hello31(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello31(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello32(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello32: (params: CallParams<HelloWorldArgs['obj']['hello32(string)string'] | HelloWorldArgs['tuple']['hello32(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello32(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello33(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello33: (params: CallParams<HelloWorldArgs['obj']['hello33(string)string'] | HelloWorldArgs['tuple']['hello33(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello33(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello34(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello34: (params: CallParams<HelloWorldArgs['obj']['hello34(string)string'] | HelloWorldArgs['tuple']['hello34(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello34(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello35(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello35: (params: CallParams<HelloWorldArgs['obj']['hello35(string)string'] | HelloWorldArgs['tuple']['hello35(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello35(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello36(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello36: (params: CallParams<HelloWorldArgs['obj']['hello36(string)string'] | HelloWorldArgs['tuple']['hello36(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello36(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello37(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello37: (params: CallParams<HelloWorldArgs['obj']['hello37(string)string'] | HelloWorldArgs['tuple']['hello37(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello37(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello38(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello38: (params: CallParams<HelloWorldArgs['obj']['hello38(string)string'] | HelloWorldArgs['tuple']['hello38(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello38(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello39(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello39: (params: CallParams<HelloWorldArgs['obj']['hello39(string)string'] | HelloWorldArgs['tuple']['hello39(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello39(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello40(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello40: (params: CallParams<HelloWorldArgs['obj']['hello40(string)string'] | HelloWorldArgs['tuple']['hello40(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello40(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello41(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello41: (params: CallParams<HelloWorldArgs['obj']['hello41(string)string'] | HelloWorldArgs['tuple']['hello41(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello41(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello42(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello42: (params: CallParams<HelloWorldArgs['obj']['hello42(string)string'] | HelloWorldArgs['tuple']['hello42(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello42(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello43(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello43: (params: CallParams<HelloWorldArgs['obj']['hello43(string)string'] | HelloWorldArgs['tuple']['hello43(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello43(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello44(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello44: (params: CallParams<HelloWorldArgs['obj']['hello44(string)string'] | HelloWorldArgs['tuple']['hello44(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello44(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello45(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello45: (params: CallParams<HelloWorldArgs['obj']['hello45(string)string'] | HelloWorldArgs['tuple']['hello45(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello45(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello46(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello46: (params: CallParams<HelloWorldArgs['obj']['hello46(string)string'] | HelloWorldArgs['tuple']['hello46(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello46(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello47(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello47: (params: CallParams<HelloWorldArgs['obj']['hello47(string)string'] | HelloWorldArgs['tuple']['hello47(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello47(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello48(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello48: (params: CallParams<HelloWorldArgs['obj']['hello48(string)string'] | HelloWorldArgs['tuple']['hello48(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello48(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello49(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello49: (params: CallParams<HelloWorldArgs['obj']['hello49(string)string'] | HelloWorldArgs['tuple']['hello49(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello49(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello50(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hello50: (params: CallParams<HelloWorldArgs['obj']['hello50(string)string'] | HelloWorldArgs['tuple']['hello50(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(HelloWorldParamsFactory.hello50(params))
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available update methods
     */
    update: {
      /**
       * Updates an existing instance of the HelloWorld smart contract using a bare call.
       *
       * @param params The params for the bare (raw) call
       * @returns The update result
       */
      bare: (params?: Expand<AppClientBareCallParams & AppClientCompilationParams>) => {
        return this.appClient.createTransaction.bare.update(params)
      },
    },

    /**
     * Makes a clear_state call to an existing instance of the HelloWorld smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.createTransaction.bare.clearState(params)
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello: (params: CallParams<HelloWorldArgs['obj']['hello(string)string'] | HelloWorldArgs['tuple']['hello(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello2(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello2: (params: CallParams<HelloWorldArgs['obj']['hello2(string)string'] | HelloWorldArgs['tuple']['hello2(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello2(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello3(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello3: (params: CallParams<HelloWorldArgs['obj']['hello3(string)string'] | HelloWorldArgs['tuple']['hello3(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello3(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello4(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello4: (params: CallParams<HelloWorldArgs['obj']['hello4(string)string'] | HelloWorldArgs['tuple']['hello4(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello4(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello5(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello5: (params: CallParams<HelloWorldArgs['obj']['hello5(string)string'] | HelloWorldArgs['tuple']['hello5(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello5(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello6(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello6: (params: CallParams<HelloWorldArgs['obj']['hello6(string)string'] | HelloWorldArgs['tuple']['hello6(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello6(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello7(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello7: (params: CallParams<HelloWorldArgs['obj']['hello7(string)string'] | HelloWorldArgs['tuple']['hello7(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello7(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello8(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello8: (params: CallParams<HelloWorldArgs['obj']['hello8(string)string'] | HelloWorldArgs['tuple']['hello8(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello8(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello9(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello9: (params: CallParams<HelloWorldArgs['obj']['hello9(string)string'] | HelloWorldArgs['tuple']['hello9(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello9(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello10(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello10: (params: CallParams<HelloWorldArgs['obj']['hello10(string)string'] | HelloWorldArgs['tuple']['hello10(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello10(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello11(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello11: (params: CallParams<HelloWorldArgs['obj']['hello11(string)string'] | HelloWorldArgs['tuple']['hello11(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello11(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello12(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello12: (params: CallParams<HelloWorldArgs['obj']['hello12(string)string'] | HelloWorldArgs['tuple']['hello12(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello12(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello13(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello13: (params: CallParams<HelloWorldArgs['obj']['hello13(string)string'] | HelloWorldArgs['tuple']['hello13(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello13(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello14(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello14: (params: CallParams<HelloWorldArgs['obj']['hello14(string)string'] | HelloWorldArgs['tuple']['hello14(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello14(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello15(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello15: (params: CallParams<HelloWorldArgs['obj']['hello15(string)string'] | HelloWorldArgs['tuple']['hello15(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello15(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello16(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello16: (params: CallParams<HelloWorldArgs['obj']['hello16(string)string'] | HelloWorldArgs['tuple']['hello16(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello16(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello17(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello17: (params: CallParams<HelloWorldArgs['obj']['hello17(string)string'] | HelloWorldArgs['tuple']['hello17(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello17(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello18(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello18: (params: CallParams<HelloWorldArgs['obj']['hello18(string)string'] | HelloWorldArgs['tuple']['hello18(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello18(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello19(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello19: (params: CallParams<HelloWorldArgs['obj']['hello19(string)string'] | HelloWorldArgs['tuple']['hello19(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello19(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello20(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello20: (params: CallParams<HelloWorldArgs['obj']['hello20(string)string'] | HelloWorldArgs['tuple']['hello20(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello20(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello21(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello21: (params: CallParams<HelloWorldArgs['obj']['hello21(string)string'] | HelloWorldArgs['tuple']['hello21(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello21(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello22(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello22: (params: CallParams<HelloWorldArgs['obj']['hello22(string)string'] | HelloWorldArgs['tuple']['hello22(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello22(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello23(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello23: (params: CallParams<HelloWorldArgs['obj']['hello23(string)string'] | HelloWorldArgs['tuple']['hello23(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello23(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello24(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello24: (params: CallParams<HelloWorldArgs['obj']['hello24(string)string'] | HelloWorldArgs['tuple']['hello24(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello24(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello25(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello25: (params: CallParams<HelloWorldArgs['obj']['hello25(string)string'] | HelloWorldArgs['tuple']['hello25(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello25(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello26(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello26: (params: CallParams<HelloWorldArgs['obj']['hello26(string)string'] | HelloWorldArgs['tuple']['hello26(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello26(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello27(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello27: (params: CallParams<HelloWorldArgs['obj']['hello27(string)string'] | HelloWorldArgs['tuple']['hello27(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello27(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello28(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello28: (params: CallParams<HelloWorldArgs['obj']['hello28(string)string'] | HelloWorldArgs['tuple']['hello28(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello28(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello29(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello29: (params: CallParams<HelloWorldArgs['obj']['hello29(string)string'] | HelloWorldArgs['tuple']['hello29(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello29(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello30(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello30: (params: CallParams<HelloWorldArgs['obj']['hello30(string)string'] | HelloWorldArgs['tuple']['hello30(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello30(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello31(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello31: (params: CallParams<HelloWorldArgs['obj']['hello31(string)string'] | HelloWorldArgs['tuple']['hello31(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello31(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello32(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello32: (params: CallParams<HelloWorldArgs['obj']['hello32(string)string'] | HelloWorldArgs['tuple']['hello32(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello32(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello33(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello33: (params: CallParams<HelloWorldArgs['obj']['hello33(string)string'] | HelloWorldArgs['tuple']['hello33(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello33(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello34(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello34: (params: CallParams<HelloWorldArgs['obj']['hello34(string)string'] | HelloWorldArgs['tuple']['hello34(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello34(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello35(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello35: (params: CallParams<HelloWorldArgs['obj']['hello35(string)string'] | HelloWorldArgs['tuple']['hello35(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello35(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello36(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello36: (params: CallParams<HelloWorldArgs['obj']['hello36(string)string'] | HelloWorldArgs['tuple']['hello36(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello36(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello37(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello37: (params: CallParams<HelloWorldArgs['obj']['hello37(string)string'] | HelloWorldArgs['tuple']['hello37(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello37(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello38(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello38: (params: CallParams<HelloWorldArgs['obj']['hello38(string)string'] | HelloWorldArgs['tuple']['hello38(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello38(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello39(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello39: (params: CallParams<HelloWorldArgs['obj']['hello39(string)string'] | HelloWorldArgs['tuple']['hello39(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello39(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello40(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello40: (params: CallParams<HelloWorldArgs['obj']['hello40(string)string'] | HelloWorldArgs['tuple']['hello40(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello40(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello41(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello41: (params: CallParams<HelloWorldArgs['obj']['hello41(string)string'] | HelloWorldArgs['tuple']['hello41(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello41(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello42(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello42: (params: CallParams<HelloWorldArgs['obj']['hello42(string)string'] | HelloWorldArgs['tuple']['hello42(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello42(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello43(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello43: (params: CallParams<HelloWorldArgs['obj']['hello43(string)string'] | HelloWorldArgs['tuple']['hello43(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello43(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello44(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello44: (params: CallParams<HelloWorldArgs['obj']['hello44(string)string'] | HelloWorldArgs['tuple']['hello44(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello44(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello45(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello45: (params: CallParams<HelloWorldArgs['obj']['hello45(string)string'] | HelloWorldArgs['tuple']['hello45(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello45(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello46(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello46: (params: CallParams<HelloWorldArgs['obj']['hello46(string)string'] | HelloWorldArgs['tuple']['hello46(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello46(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello47(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello47: (params: CallParams<HelloWorldArgs['obj']['hello47(string)string'] | HelloWorldArgs['tuple']['hello47(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello47(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello48(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello48: (params: CallParams<HelloWorldArgs['obj']['hello48(string)string'] | HelloWorldArgs['tuple']['hello48(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello48(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello49(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello49: (params: CallParams<HelloWorldArgs['obj']['hello49(string)string'] | HelloWorldArgs['tuple']['hello49(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello49(params))
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello50(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hello50: (params: CallParams<HelloWorldArgs['obj']['hello50(string)string'] | HelloWorldArgs['tuple']['hello50(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(HelloWorldParamsFactory.hello50(params))
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available update methods
     */
    update: {
      /**
       * Updates an existing instance of the HelloWorld smart contract using a bare call.
       *
       * @param params The params for the bare (raw) call
       * @returns The update result
       */
      bare: (params?: Expand<AppClientBareCallParams & AppClientCompilationParams & SendParams>) => {
        return this.appClient.send.bare.update(params)
      },
    },

    /**
     * Makes a clear_state call to an existing instance of the HelloWorld smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams & SendParams>) => {
      return this.appClient.send.bare.clearState(params)
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello: async (params: CallParams<HelloWorldArgs['obj']['hello(string)string'] | HelloWorldArgs['tuple']['hello(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello2(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello2: async (params: CallParams<HelloWorldArgs['obj']['hello2(string)string'] | HelloWorldArgs['tuple']['hello2(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello2(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello2(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello3(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello3: async (params: CallParams<HelloWorldArgs['obj']['hello3(string)string'] | HelloWorldArgs['tuple']['hello3(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello3(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello3(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello4(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello4: async (params: CallParams<HelloWorldArgs['obj']['hello4(string)string'] | HelloWorldArgs['tuple']['hello4(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello4(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello4(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello5(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello5: async (params: CallParams<HelloWorldArgs['obj']['hello5(string)string'] | HelloWorldArgs['tuple']['hello5(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello5(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello5(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello6(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello6: async (params: CallParams<HelloWorldArgs['obj']['hello6(string)string'] | HelloWorldArgs['tuple']['hello6(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello6(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello6(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello7(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello7: async (params: CallParams<HelloWorldArgs['obj']['hello7(string)string'] | HelloWorldArgs['tuple']['hello7(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello7(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello7(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello8(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello8: async (params: CallParams<HelloWorldArgs['obj']['hello8(string)string'] | HelloWorldArgs['tuple']['hello8(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello8(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello8(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello9(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello9: async (params: CallParams<HelloWorldArgs['obj']['hello9(string)string'] | HelloWorldArgs['tuple']['hello9(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello9(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello9(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello10(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello10: async (params: CallParams<HelloWorldArgs['obj']['hello10(string)string'] | HelloWorldArgs['tuple']['hello10(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello10(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello10(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello11(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello11: async (params: CallParams<HelloWorldArgs['obj']['hello11(string)string'] | HelloWorldArgs['tuple']['hello11(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello11(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello11(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello12(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello12: async (params: CallParams<HelloWorldArgs['obj']['hello12(string)string'] | HelloWorldArgs['tuple']['hello12(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello12(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello12(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello13(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello13: async (params: CallParams<HelloWorldArgs['obj']['hello13(string)string'] | HelloWorldArgs['tuple']['hello13(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello13(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello13(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello14(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello14: async (params: CallParams<HelloWorldArgs['obj']['hello14(string)string'] | HelloWorldArgs['tuple']['hello14(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello14(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello14(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello15(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello15: async (params: CallParams<HelloWorldArgs['obj']['hello15(string)string'] | HelloWorldArgs['tuple']['hello15(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello15(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello15(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello16(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello16: async (params: CallParams<HelloWorldArgs['obj']['hello16(string)string'] | HelloWorldArgs['tuple']['hello16(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello16(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello16(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello17(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello17: async (params: CallParams<HelloWorldArgs['obj']['hello17(string)string'] | HelloWorldArgs['tuple']['hello17(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello17(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello17(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello18(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello18: async (params: CallParams<HelloWorldArgs['obj']['hello18(string)string'] | HelloWorldArgs['tuple']['hello18(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello18(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello18(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello19(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello19: async (params: CallParams<HelloWorldArgs['obj']['hello19(string)string'] | HelloWorldArgs['tuple']['hello19(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello19(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello19(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello20(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello20: async (params: CallParams<HelloWorldArgs['obj']['hello20(string)string'] | HelloWorldArgs['tuple']['hello20(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello20(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello20(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello21(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello21: async (params: CallParams<HelloWorldArgs['obj']['hello21(string)string'] | HelloWorldArgs['tuple']['hello21(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello21(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello21(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello22(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello22: async (params: CallParams<HelloWorldArgs['obj']['hello22(string)string'] | HelloWorldArgs['tuple']['hello22(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello22(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello22(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello23(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello23: async (params: CallParams<HelloWorldArgs['obj']['hello23(string)string'] | HelloWorldArgs['tuple']['hello23(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello23(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello23(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello24(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello24: async (params: CallParams<HelloWorldArgs['obj']['hello24(string)string'] | HelloWorldArgs['tuple']['hello24(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello24(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello24(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello25(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello25: async (params: CallParams<HelloWorldArgs['obj']['hello25(string)string'] | HelloWorldArgs['tuple']['hello25(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello25(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello25(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello26(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello26: async (params: CallParams<HelloWorldArgs['obj']['hello26(string)string'] | HelloWorldArgs['tuple']['hello26(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello26(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello26(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello27(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello27: async (params: CallParams<HelloWorldArgs['obj']['hello27(string)string'] | HelloWorldArgs['tuple']['hello27(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello27(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello27(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello28(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello28: async (params: CallParams<HelloWorldArgs['obj']['hello28(string)string'] | HelloWorldArgs['tuple']['hello28(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello28(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello28(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello29(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello29: async (params: CallParams<HelloWorldArgs['obj']['hello29(string)string'] | HelloWorldArgs['tuple']['hello29(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello29(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello29(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello30(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello30: async (params: CallParams<HelloWorldArgs['obj']['hello30(string)string'] | HelloWorldArgs['tuple']['hello30(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello30(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello30(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello31(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello31: async (params: CallParams<HelloWorldArgs['obj']['hello31(string)string'] | HelloWorldArgs['tuple']['hello31(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello31(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello31(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello32(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello32: async (params: CallParams<HelloWorldArgs['obj']['hello32(string)string'] | HelloWorldArgs['tuple']['hello32(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello32(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello32(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello33(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello33: async (params: CallParams<HelloWorldArgs['obj']['hello33(string)string'] | HelloWorldArgs['tuple']['hello33(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello33(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello33(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello34(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello34: async (params: CallParams<HelloWorldArgs['obj']['hello34(string)string'] | HelloWorldArgs['tuple']['hello34(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello34(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello34(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello35(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello35: async (params: CallParams<HelloWorldArgs['obj']['hello35(string)string'] | HelloWorldArgs['tuple']['hello35(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello35(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello35(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello36(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello36: async (params: CallParams<HelloWorldArgs['obj']['hello36(string)string'] | HelloWorldArgs['tuple']['hello36(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello36(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello36(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello37(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello37: async (params: CallParams<HelloWorldArgs['obj']['hello37(string)string'] | HelloWorldArgs['tuple']['hello37(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello37(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello37(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello38(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello38: async (params: CallParams<HelloWorldArgs['obj']['hello38(string)string'] | HelloWorldArgs['tuple']['hello38(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello38(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello38(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello39(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello39: async (params: CallParams<HelloWorldArgs['obj']['hello39(string)string'] | HelloWorldArgs['tuple']['hello39(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello39(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello39(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello40(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello40: async (params: CallParams<HelloWorldArgs['obj']['hello40(string)string'] | HelloWorldArgs['tuple']['hello40(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello40(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello40(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello41(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello41: async (params: CallParams<HelloWorldArgs['obj']['hello41(string)string'] | HelloWorldArgs['tuple']['hello41(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello41(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello41(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello42(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello42: async (params: CallParams<HelloWorldArgs['obj']['hello42(string)string'] | HelloWorldArgs['tuple']['hello42(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello42(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello42(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello43(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello43: async (params: CallParams<HelloWorldArgs['obj']['hello43(string)string'] | HelloWorldArgs['tuple']['hello43(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello43(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello43(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello44(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello44: async (params: CallParams<HelloWorldArgs['obj']['hello44(string)string'] | HelloWorldArgs['tuple']['hello44(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello44(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello44(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello45(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello45: async (params: CallParams<HelloWorldArgs['obj']['hello45(string)string'] | HelloWorldArgs['tuple']['hello45(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello45(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello45(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello46(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello46: async (params: CallParams<HelloWorldArgs['obj']['hello46(string)string'] | HelloWorldArgs['tuple']['hello46(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello46(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello46(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello47(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello47: async (params: CallParams<HelloWorldArgs['obj']['hello47(string)string'] | HelloWorldArgs['tuple']['hello47(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello47(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello47(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello48(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello48: async (params: CallParams<HelloWorldArgs['obj']['hello48(string)string'] | HelloWorldArgs['tuple']['hello48(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello48(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello48(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello49(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello49: async (params: CallParams<HelloWorldArgs['obj']['hello49(string)string'] | HelloWorldArgs['tuple']['hello49(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello49(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello49(string)string'])}
    },

    /**
     * Makes a call to the HelloWorld smart contract using the `hello50(string)string` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hello50: async (params: CallParams<HelloWorldArgs['obj']['hello50(string)string'] | HelloWorldArgs['tuple']['hello50(string)string']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(HelloWorldParamsFactory.hello50(params))
      return {...result, return: result.return as unknown as (undefined | HelloWorldReturns['hello50(string)string'])}
    },

  }

  /**
   * Clone this app client with different params
   *
   * @param params The params to use for the the cloned app client. Omit a param to keep the original value. Set a param to override the original value. Setting to undefined will clear the original value.
   * @returns A new app client with the altered params
   */
  public clone(params: CloneAppClientParams) {
    return new HelloWorldClient(this.appClient.clone(params))
  }

  /**
   * Methods to access state for the current HelloWorld app
   */
  state = {
  }

  public newGroup(): HelloWorldComposer {
    const client = this
    const composer = this.algorand.newGroup()
    let promiseChain:Promise<unknown> = Promise.resolve()
    const resultMappers: Array<undefined | ((x: ABIReturn | undefined) => any)> = []
    return {
      /**
       * Add a hello(string)string method call against the HelloWorld contract
       */
      hello(params: CallParams<HelloWorldArgs['obj']['hello(string)string'] | HelloWorldArgs['tuple']['hello(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello(string)string', v))
        return this
      },
      /**
       * Add a hello2(string)string method call against the HelloWorld contract
       */
      hello2(params: CallParams<HelloWorldArgs['obj']['hello2(string)string'] | HelloWorldArgs['tuple']['hello2(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello2(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello2(string)string', v))
        return this
      },
      /**
       * Add a hello3(string)string method call against the HelloWorld contract
       */
      hello3(params: CallParams<HelloWorldArgs['obj']['hello3(string)string'] | HelloWorldArgs['tuple']['hello3(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello3(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello3(string)string', v))
        return this
      },
      /**
       * Add a hello4(string)string method call against the HelloWorld contract
       */
      hello4(params: CallParams<HelloWorldArgs['obj']['hello4(string)string'] | HelloWorldArgs['tuple']['hello4(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello4(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello4(string)string', v))
        return this
      },
      /**
       * Add a hello5(string)string method call against the HelloWorld contract
       */
      hello5(params: CallParams<HelloWorldArgs['obj']['hello5(string)string'] | HelloWorldArgs['tuple']['hello5(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello5(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello5(string)string', v))
        return this
      },
      /**
       * Add a hello6(string)string method call against the HelloWorld contract
       */
      hello6(params: CallParams<HelloWorldArgs['obj']['hello6(string)string'] | HelloWorldArgs['tuple']['hello6(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello6(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello6(string)string', v))
        return this
      },
      /**
       * Add a hello7(string)string method call against the HelloWorld contract
       */
      hello7(params: CallParams<HelloWorldArgs['obj']['hello7(string)string'] | HelloWorldArgs['tuple']['hello7(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello7(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello7(string)string', v))
        return this
      },
      /**
       * Add a hello8(string)string method call against the HelloWorld contract
       */
      hello8(params: CallParams<HelloWorldArgs['obj']['hello8(string)string'] | HelloWorldArgs['tuple']['hello8(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello8(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello8(string)string', v))
        return this
      },
      /**
       * Add a hello9(string)string method call against the HelloWorld contract
       */
      hello9(params: CallParams<HelloWorldArgs['obj']['hello9(string)string'] | HelloWorldArgs['tuple']['hello9(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello9(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello9(string)string', v))
        return this
      },
      /**
       * Add a hello10(string)string method call against the HelloWorld contract
       */
      hello10(params: CallParams<HelloWorldArgs['obj']['hello10(string)string'] | HelloWorldArgs['tuple']['hello10(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello10(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello10(string)string', v))
        return this
      },
      /**
       * Add a hello11(string)string method call against the HelloWorld contract
       */
      hello11(params: CallParams<HelloWorldArgs['obj']['hello11(string)string'] | HelloWorldArgs['tuple']['hello11(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello11(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello11(string)string', v))
        return this
      },
      /**
       * Add a hello12(string)string method call against the HelloWorld contract
       */
      hello12(params: CallParams<HelloWorldArgs['obj']['hello12(string)string'] | HelloWorldArgs['tuple']['hello12(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello12(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello12(string)string', v))
        return this
      },
      /**
       * Add a hello13(string)string method call against the HelloWorld contract
       */
      hello13(params: CallParams<HelloWorldArgs['obj']['hello13(string)string'] | HelloWorldArgs['tuple']['hello13(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello13(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello13(string)string', v))
        return this
      },
      /**
       * Add a hello14(string)string method call against the HelloWorld contract
       */
      hello14(params: CallParams<HelloWorldArgs['obj']['hello14(string)string'] | HelloWorldArgs['tuple']['hello14(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello14(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello14(string)string', v))
        return this
      },
      /**
       * Add a hello15(string)string method call against the HelloWorld contract
       */
      hello15(params: CallParams<HelloWorldArgs['obj']['hello15(string)string'] | HelloWorldArgs['tuple']['hello15(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello15(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello15(string)string', v))
        return this
      },
      /**
       * Add a hello16(string)string method call against the HelloWorld contract
       */
      hello16(params: CallParams<HelloWorldArgs['obj']['hello16(string)string'] | HelloWorldArgs['tuple']['hello16(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello16(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello16(string)string', v))
        return this
      },
      /**
       * Add a hello17(string)string method call against the HelloWorld contract
       */
      hello17(params: CallParams<HelloWorldArgs['obj']['hello17(string)string'] | HelloWorldArgs['tuple']['hello17(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello17(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello17(string)string', v))
        return this
      },
      /**
       * Add a hello18(string)string method call against the HelloWorld contract
       */
      hello18(params: CallParams<HelloWorldArgs['obj']['hello18(string)string'] | HelloWorldArgs['tuple']['hello18(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello18(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello18(string)string', v))
        return this
      },
      /**
       * Add a hello19(string)string method call against the HelloWorld contract
       */
      hello19(params: CallParams<HelloWorldArgs['obj']['hello19(string)string'] | HelloWorldArgs['tuple']['hello19(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello19(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello19(string)string', v))
        return this
      },
      /**
       * Add a hello20(string)string method call against the HelloWorld contract
       */
      hello20(params: CallParams<HelloWorldArgs['obj']['hello20(string)string'] | HelloWorldArgs['tuple']['hello20(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello20(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello20(string)string', v))
        return this
      },
      /**
       * Add a hello21(string)string method call against the HelloWorld contract
       */
      hello21(params: CallParams<HelloWorldArgs['obj']['hello21(string)string'] | HelloWorldArgs['tuple']['hello21(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello21(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello21(string)string', v))
        return this
      },
      /**
       * Add a hello22(string)string method call against the HelloWorld contract
       */
      hello22(params: CallParams<HelloWorldArgs['obj']['hello22(string)string'] | HelloWorldArgs['tuple']['hello22(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello22(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello22(string)string', v))
        return this
      },
      /**
       * Add a hello23(string)string method call against the HelloWorld contract
       */
      hello23(params: CallParams<HelloWorldArgs['obj']['hello23(string)string'] | HelloWorldArgs['tuple']['hello23(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello23(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello23(string)string', v))
        return this
      },
      /**
       * Add a hello24(string)string method call against the HelloWorld contract
       */
      hello24(params: CallParams<HelloWorldArgs['obj']['hello24(string)string'] | HelloWorldArgs['tuple']['hello24(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello24(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello24(string)string', v))
        return this
      },
      /**
       * Add a hello25(string)string method call against the HelloWorld contract
       */
      hello25(params: CallParams<HelloWorldArgs['obj']['hello25(string)string'] | HelloWorldArgs['tuple']['hello25(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello25(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello25(string)string', v))
        return this
      },
      /**
       * Add a hello26(string)string method call against the HelloWorld contract
       */
      hello26(params: CallParams<HelloWorldArgs['obj']['hello26(string)string'] | HelloWorldArgs['tuple']['hello26(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello26(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello26(string)string', v))
        return this
      },
      /**
       * Add a hello27(string)string method call against the HelloWorld contract
       */
      hello27(params: CallParams<HelloWorldArgs['obj']['hello27(string)string'] | HelloWorldArgs['tuple']['hello27(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello27(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello27(string)string', v))
        return this
      },
      /**
       * Add a hello28(string)string method call against the HelloWorld contract
       */
      hello28(params: CallParams<HelloWorldArgs['obj']['hello28(string)string'] | HelloWorldArgs['tuple']['hello28(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello28(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello28(string)string', v))
        return this
      },
      /**
       * Add a hello29(string)string method call against the HelloWorld contract
       */
      hello29(params: CallParams<HelloWorldArgs['obj']['hello29(string)string'] | HelloWorldArgs['tuple']['hello29(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello29(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello29(string)string', v))
        return this
      },
      /**
       * Add a hello30(string)string method call against the HelloWorld contract
       */
      hello30(params: CallParams<HelloWorldArgs['obj']['hello30(string)string'] | HelloWorldArgs['tuple']['hello30(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello30(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello30(string)string', v))
        return this
      },
      /**
       * Add a hello31(string)string method call against the HelloWorld contract
       */
      hello31(params: CallParams<HelloWorldArgs['obj']['hello31(string)string'] | HelloWorldArgs['tuple']['hello31(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello31(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello31(string)string', v))
        return this
      },
      /**
       * Add a hello32(string)string method call against the HelloWorld contract
       */
      hello32(params: CallParams<HelloWorldArgs['obj']['hello32(string)string'] | HelloWorldArgs['tuple']['hello32(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello32(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello32(string)string', v))
        return this
      },
      /**
       * Add a hello33(string)string method call against the HelloWorld contract
       */
      hello33(params: CallParams<HelloWorldArgs['obj']['hello33(string)string'] | HelloWorldArgs['tuple']['hello33(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello33(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello33(string)string', v))
        return this
      },
      /**
       * Add a hello34(string)string method call against the HelloWorld contract
       */
      hello34(params: CallParams<HelloWorldArgs['obj']['hello34(string)string'] | HelloWorldArgs['tuple']['hello34(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello34(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello34(string)string', v))
        return this
      },
      /**
       * Add a hello35(string)string method call against the HelloWorld contract
       */
      hello35(params: CallParams<HelloWorldArgs['obj']['hello35(string)string'] | HelloWorldArgs['tuple']['hello35(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello35(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello35(string)string', v))
        return this
      },
      /**
       * Add a hello36(string)string method call against the HelloWorld contract
       */
      hello36(params: CallParams<HelloWorldArgs['obj']['hello36(string)string'] | HelloWorldArgs['tuple']['hello36(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello36(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello36(string)string', v))
        return this
      },
      /**
       * Add a hello37(string)string method call against the HelloWorld contract
       */
      hello37(params: CallParams<HelloWorldArgs['obj']['hello37(string)string'] | HelloWorldArgs['tuple']['hello37(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello37(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello37(string)string', v))
        return this
      },
      /**
       * Add a hello38(string)string method call against the HelloWorld contract
       */
      hello38(params: CallParams<HelloWorldArgs['obj']['hello38(string)string'] | HelloWorldArgs['tuple']['hello38(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello38(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello38(string)string', v))
        return this
      },
      /**
       * Add a hello39(string)string method call against the HelloWorld contract
       */
      hello39(params: CallParams<HelloWorldArgs['obj']['hello39(string)string'] | HelloWorldArgs['tuple']['hello39(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello39(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello39(string)string', v))
        return this
      },
      /**
       * Add a hello40(string)string method call against the HelloWorld contract
       */
      hello40(params: CallParams<HelloWorldArgs['obj']['hello40(string)string'] | HelloWorldArgs['tuple']['hello40(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello40(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello40(string)string', v))
        return this
      },
      /**
       * Add a hello41(string)string method call against the HelloWorld contract
       */
      hello41(params: CallParams<HelloWorldArgs['obj']['hello41(string)string'] | HelloWorldArgs['tuple']['hello41(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello41(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello41(string)string', v))
        return this
      },
      /**
       * Add a hello42(string)string method call against the HelloWorld contract
       */
      hello42(params: CallParams<HelloWorldArgs['obj']['hello42(string)string'] | HelloWorldArgs['tuple']['hello42(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello42(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello42(string)string', v))
        return this
      },
      /**
       * Add a hello43(string)string method call against the HelloWorld contract
       */
      hello43(params: CallParams<HelloWorldArgs['obj']['hello43(string)string'] | HelloWorldArgs['tuple']['hello43(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello43(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello43(string)string', v))
        return this
      },
      /**
       * Add a hello44(string)string method call against the HelloWorld contract
       */
      hello44(params: CallParams<HelloWorldArgs['obj']['hello44(string)string'] | HelloWorldArgs['tuple']['hello44(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello44(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello44(string)string', v))
        return this
      },
      /**
       * Add a hello45(string)string method call against the HelloWorld contract
       */
      hello45(params: CallParams<HelloWorldArgs['obj']['hello45(string)string'] | HelloWorldArgs['tuple']['hello45(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello45(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello45(string)string', v))
        return this
      },
      /**
       * Add a hello46(string)string method call against the HelloWorld contract
       */
      hello46(params: CallParams<HelloWorldArgs['obj']['hello46(string)string'] | HelloWorldArgs['tuple']['hello46(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello46(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello46(string)string', v))
        return this
      },
      /**
       * Add a hello47(string)string method call against the HelloWorld contract
       */
      hello47(params: CallParams<HelloWorldArgs['obj']['hello47(string)string'] | HelloWorldArgs['tuple']['hello47(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello47(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello47(string)string', v))
        return this
      },
      /**
       * Add a hello48(string)string method call against the HelloWorld contract
       */
      hello48(params: CallParams<HelloWorldArgs['obj']['hello48(string)string'] | HelloWorldArgs['tuple']['hello48(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello48(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello48(string)string', v))
        return this
      },
      /**
       * Add a hello49(string)string method call against the HelloWorld contract
       */
      hello49(params: CallParams<HelloWorldArgs['obj']['hello49(string)string'] | HelloWorldArgs['tuple']['hello49(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello49(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello49(string)string', v))
        return this
      },
      /**
       * Add a hello50(string)string method call against the HelloWorld contract
       */
      hello50(params: CallParams<HelloWorldArgs['obj']['hello50(string)string'] | HelloWorldArgs['tuple']['hello50(string)string']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hello50(params)))
        resultMappers.push((v) => client.decodeReturnValue('hello50(string)string', v))
        return this
      },
      get update() {
        return {
          bare: (params?: AppClientBareCallParams & AppClientCompilationParams ) => {
            promiseChain = promiseChain.then(async () => composer.addAppUpdate(await client.params.update.bare(params)))
            return this
          },
        }
      },
      /**
       * Add a clear state call to the HelloWorld contract
       */
      clearState(params: AppClientBareCallParams) {
        promiseChain = promiseChain.then(() => composer.addAppCall(client.params.clearState(params)))
        return this
      },
      addTransaction(txn: Transaction, signer?: TransactionSigner) {
        promiseChain = promiseChain.then(() => composer.addTransaction(txn, signer))
        return this
      },
      async composer() {
        await promiseChain
        return composer
      },
      async simulate(options?: SimulateOptions) {
        await promiseChain
        const result = await (!options ? composer.simulate() : composer.simulate(options))
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      },
      async send(params?: SendParams) {
        await promiseChain
        const result = await composer.send(params)
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      }
    } as unknown as HelloWorldComposer
  }
}
export type HelloWorldComposer<TReturns extends [...any[]] = []> = {
  /**
   * Calls the hello(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello(params?: CallParams<HelloWorldArgs['obj']['hello(string)string'] | HelloWorldArgs['tuple']['hello(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello(string)string'] | undefined]>

  /**
   * Calls the hello2(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello2(params?: CallParams<HelloWorldArgs['obj']['hello2(string)string'] | HelloWorldArgs['tuple']['hello2(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello2(string)string'] | undefined]>

  /**
   * Calls the hello3(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello3(params?: CallParams<HelloWorldArgs['obj']['hello3(string)string'] | HelloWorldArgs['tuple']['hello3(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello3(string)string'] | undefined]>

  /**
   * Calls the hello4(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello4(params?: CallParams<HelloWorldArgs['obj']['hello4(string)string'] | HelloWorldArgs['tuple']['hello4(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello4(string)string'] | undefined]>

  /**
   * Calls the hello5(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello5(params?: CallParams<HelloWorldArgs['obj']['hello5(string)string'] | HelloWorldArgs['tuple']['hello5(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello5(string)string'] | undefined]>

  /**
   * Calls the hello6(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello6(params?: CallParams<HelloWorldArgs['obj']['hello6(string)string'] | HelloWorldArgs['tuple']['hello6(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello6(string)string'] | undefined]>

  /**
   * Calls the hello7(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello7(params?: CallParams<HelloWorldArgs['obj']['hello7(string)string'] | HelloWorldArgs['tuple']['hello7(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello7(string)string'] | undefined]>

  /**
   * Calls the hello8(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello8(params?: CallParams<HelloWorldArgs['obj']['hello8(string)string'] | HelloWorldArgs['tuple']['hello8(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello8(string)string'] | undefined]>

  /**
   * Calls the hello9(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello9(params?: CallParams<HelloWorldArgs['obj']['hello9(string)string'] | HelloWorldArgs['tuple']['hello9(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello9(string)string'] | undefined]>

  /**
   * Calls the hello10(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello10(params?: CallParams<HelloWorldArgs['obj']['hello10(string)string'] | HelloWorldArgs['tuple']['hello10(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello10(string)string'] | undefined]>

  /**
   * Calls the hello11(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello11(params?: CallParams<HelloWorldArgs['obj']['hello11(string)string'] | HelloWorldArgs['tuple']['hello11(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello11(string)string'] | undefined]>

  /**
   * Calls the hello12(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello12(params?: CallParams<HelloWorldArgs['obj']['hello12(string)string'] | HelloWorldArgs['tuple']['hello12(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello12(string)string'] | undefined]>

  /**
   * Calls the hello13(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello13(params?: CallParams<HelloWorldArgs['obj']['hello13(string)string'] | HelloWorldArgs['tuple']['hello13(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello13(string)string'] | undefined]>

  /**
   * Calls the hello14(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello14(params?: CallParams<HelloWorldArgs['obj']['hello14(string)string'] | HelloWorldArgs['tuple']['hello14(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello14(string)string'] | undefined]>

  /**
   * Calls the hello15(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello15(params?: CallParams<HelloWorldArgs['obj']['hello15(string)string'] | HelloWorldArgs['tuple']['hello15(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello15(string)string'] | undefined]>

  /**
   * Calls the hello16(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello16(params?: CallParams<HelloWorldArgs['obj']['hello16(string)string'] | HelloWorldArgs['tuple']['hello16(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello16(string)string'] | undefined]>

  /**
   * Calls the hello17(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello17(params?: CallParams<HelloWorldArgs['obj']['hello17(string)string'] | HelloWorldArgs['tuple']['hello17(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello17(string)string'] | undefined]>

  /**
   * Calls the hello18(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello18(params?: CallParams<HelloWorldArgs['obj']['hello18(string)string'] | HelloWorldArgs['tuple']['hello18(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello18(string)string'] | undefined]>

  /**
   * Calls the hello19(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello19(params?: CallParams<HelloWorldArgs['obj']['hello19(string)string'] | HelloWorldArgs['tuple']['hello19(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello19(string)string'] | undefined]>

  /**
   * Calls the hello20(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello20(params?: CallParams<HelloWorldArgs['obj']['hello20(string)string'] | HelloWorldArgs['tuple']['hello20(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello20(string)string'] | undefined]>

  /**
   * Calls the hello21(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello21(params?: CallParams<HelloWorldArgs['obj']['hello21(string)string'] | HelloWorldArgs['tuple']['hello21(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello21(string)string'] | undefined]>

  /**
   * Calls the hello22(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello22(params?: CallParams<HelloWorldArgs['obj']['hello22(string)string'] | HelloWorldArgs['tuple']['hello22(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello22(string)string'] | undefined]>

  /**
   * Calls the hello23(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello23(params?: CallParams<HelloWorldArgs['obj']['hello23(string)string'] | HelloWorldArgs['tuple']['hello23(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello23(string)string'] | undefined]>

  /**
   * Calls the hello24(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello24(params?: CallParams<HelloWorldArgs['obj']['hello24(string)string'] | HelloWorldArgs['tuple']['hello24(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello24(string)string'] | undefined]>

  /**
   * Calls the hello25(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello25(params?: CallParams<HelloWorldArgs['obj']['hello25(string)string'] | HelloWorldArgs['tuple']['hello25(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello25(string)string'] | undefined]>

  /**
   * Calls the hello26(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello26(params?: CallParams<HelloWorldArgs['obj']['hello26(string)string'] | HelloWorldArgs['tuple']['hello26(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello26(string)string'] | undefined]>

  /**
   * Calls the hello27(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello27(params?: CallParams<HelloWorldArgs['obj']['hello27(string)string'] | HelloWorldArgs['tuple']['hello27(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello27(string)string'] | undefined]>

  /**
   * Calls the hello28(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello28(params?: CallParams<HelloWorldArgs['obj']['hello28(string)string'] | HelloWorldArgs['tuple']['hello28(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello28(string)string'] | undefined]>

  /**
   * Calls the hello29(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello29(params?: CallParams<HelloWorldArgs['obj']['hello29(string)string'] | HelloWorldArgs['tuple']['hello29(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello29(string)string'] | undefined]>

  /**
   * Calls the hello30(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello30(params?: CallParams<HelloWorldArgs['obj']['hello30(string)string'] | HelloWorldArgs['tuple']['hello30(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello30(string)string'] | undefined]>

  /**
   * Calls the hello31(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello31(params?: CallParams<HelloWorldArgs['obj']['hello31(string)string'] | HelloWorldArgs['tuple']['hello31(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello31(string)string'] | undefined]>

  /**
   * Calls the hello32(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello32(params?: CallParams<HelloWorldArgs['obj']['hello32(string)string'] | HelloWorldArgs['tuple']['hello32(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello32(string)string'] | undefined]>

  /**
   * Calls the hello33(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello33(params?: CallParams<HelloWorldArgs['obj']['hello33(string)string'] | HelloWorldArgs['tuple']['hello33(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello33(string)string'] | undefined]>

  /**
   * Calls the hello34(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello34(params?: CallParams<HelloWorldArgs['obj']['hello34(string)string'] | HelloWorldArgs['tuple']['hello34(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello34(string)string'] | undefined]>

  /**
   * Calls the hello35(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello35(params?: CallParams<HelloWorldArgs['obj']['hello35(string)string'] | HelloWorldArgs['tuple']['hello35(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello35(string)string'] | undefined]>

  /**
   * Calls the hello36(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello36(params?: CallParams<HelloWorldArgs['obj']['hello36(string)string'] | HelloWorldArgs['tuple']['hello36(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello36(string)string'] | undefined]>

  /**
   * Calls the hello37(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello37(params?: CallParams<HelloWorldArgs['obj']['hello37(string)string'] | HelloWorldArgs['tuple']['hello37(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello37(string)string'] | undefined]>

  /**
   * Calls the hello38(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello38(params?: CallParams<HelloWorldArgs['obj']['hello38(string)string'] | HelloWorldArgs['tuple']['hello38(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello38(string)string'] | undefined]>

  /**
   * Calls the hello39(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello39(params?: CallParams<HelloWorldArgs['obj']['hello39(string)string'] | HelloWorldArgs['tuple']['hello39(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello39(string)string'] | undefined]>

  /**
   * Calls the hello40(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello40(params?: CallParams<HelloWorldArgs['obj']['hello40(string)string'] | HelloWorldArgs['tuple']['hello40(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello40(string)string'] | undefined]>

  /**
   * Calls the hello41(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello41(params?: CallParams<HelloWorldArgs['obj']['hello41(string)string'] | HelloWorldArgs['tuple']['hello41(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello41(string)string'] | undefined]>

  /**
   * Calls the hello42(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello42(params?: CallParams<HelloWorldArgs['obj']['hello42(string)string'] | HelloWorldArgs['tuple']['hello42(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello42(string)string'] | undefined]>

  /**
   * Calls the hello43(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello43(params?: CallParams<HelloWorldArgs['obj']['hello43(string)string'] | HelloWorldArgs['tuple']['hello43(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello43(string)string'] | undefined]>

  /**
   * Calls the hello44(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello44(params?: CallParams<HelloWorldArgs['obj']['hello44(string)string'] | HelloWorldArgs['tuple']['hello44(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello44(string)string'] | undefined]>

  /**
   * Calls the hello45(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello45(params?: CallParams<HelloWorldArgs['obj']['hello45(string)string'] | HelloWorldArgs['tuple']['hello45(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello45(string)string'] | undefined]>

  /**
   * Calls the hello46(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello46(params?: CallParams<HelloWorldArgs['obj']['hello46(string)string'] | HelloWorldArgs['tuple']['hello46(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello46(string)string'] | undefined]>

  /**
   * Calls the hello47(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello47(params?: CallParams<HelloWorldArgs['obj']['hello47(string)string'] | HelloWorldArgs['tuple']['hello47(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello47(string)string'] | undefined]>

  /**
   * Calls the hello48(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello48(params?: CallParams<HelloWorldArgs['obj']['hello48(string)string'] | HelloWorldArgs['tuple']['hello48(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello48(string)string'] | undefined]>

  /**
   * Calls the hello49(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello49(params?: CallParams<HelloWorldArgs['obj']['hello49(string)string'] | HelloWorldArgs['tuple']['hello49(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello49(string)string'] | undefined]>

  /**
   * Calls the hello50(string)string ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hello50(params?: CallParams<HelloWorldArgs['obj']['hello50(string)string'] | HelloWorldArgs['tuple']['hello50(string)string']>): HelloWorldComposer<[...TReturns, HelloWorldReturns['hello50(string)string'] | undefined]>

  /**
   * Gets available update methods
   */
  readonly update: {
    /**
     * Updates an existing instance of the HelloWorld smart contract using a bare call.
     *
     * @param args The arguments for the bare call
     * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
     */
    bare(params?: AppClientBareCallParams ): HelloWorldComposer<[...TReturns, undefined]>
  }

  /**
   * Makes a clear_state call to an existing instance of the HelloWorld smart contract.
   *
   * @param args The arguments for the bare call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  clearState(params?: AppClientBareCallParams): HelloWorldComposer<[...TReturns, undefined]>

  /**
   * Adds a transaction to the composer
   *
   * @param txn A transaction to add to the transaction group
   * @param signer The optional signer to use when signing this transaction.
   */
  addTransaction(txn: Transaction, signer?: TransactionSigner): HelloWorldComposer<TReturns>
  /**
   * Returns the underlying AtomicTransactionComposer instance
   */
  composer(): Promise<TransactionComposer>
  /**
   * Simulates the transaction group and returns the result
   */
  simulate(): Promise<HelloWorldComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: SkipSignaturesSimulateOptions): Promise<HelloWorldComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: RawSimulateOptions): Promise<HelloWorldComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  /**
   * Sends the transaction group to the network and returns the results
   */
  send(params?: SendParams): Promise<HelloWorldComposerResults<TReturns>>
}
export type HelloWorldComposerResults<TReturns extends [...any[]]> = Expand<SendAtomicTransactionComposerResults & {
  returns: TReturns
}>

